services:
  http_server:
    build:
      dockerfile: http_server/Dockerfile
    ports:
      - 8080:8080
    environment:
      - BROKER_HOST=broker
      - BROKER_PORT=5672
    depends_on:
      consumer:
        condition: service_started
      postgres:
        condition: service_healthy
    healthcheck:
      test: curl --fail -X GET http://http_server:8080/health || exit 1
      interval: 3s
      timeout: 3s
      retries: 1

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=postgres_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5430:5432"
    volumes:
      - /home/midas/.pgdata:/var/lib/postgresql/data/pgdata
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d postgres_db" ]
      interval: 15s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  broker:
    image: "rabbitmq:3-management"
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 30s
      retries: 3

  consumer:
    build:
      dockerfile: consumers/code_processor/Dockerfile
    environment:
      - BROKER_HOST=broker
      - BROKER_PORT=5672
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      broker:
        condition: service_healthy

  tester:
    build:
      dockerfile: tests/Dockerfile
    environment:
      - HTTP_HOST=http_server
      - HTTP_PORT=8080
    profiles:
      - test
    depends_on:
      http_server:
        condition: service_healthy
